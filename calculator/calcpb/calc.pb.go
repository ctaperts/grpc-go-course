// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator/calcpb/calc.proto

package calcpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Integers struct {
	NumberOne            int32    `protobuf:"varint,1,opt,name=number_one,json=numberOne,proto3" json:"number_one,omitempty"`
	NumberTwo            int32    `protobuf:"varint,2,opt,name=number_two,json=numberTwo,proto3" json:"number_two,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Integers) Reset()         { *m = Integers{} }
func (m *Integers) String() string { return proto.CompactTextString(m) }
func (*Integers) ProtoMessage()    {}
func (*Integers) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{0}
}

func (m *Integers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Integers.Unmarshal(m, b)
}
func (m *Integers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Integers.Marshal(b, m, deterministic)
}
func (m *Integers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Integers.Merge(m, src)
}
func (m *Integers) XXX_Size() int {
	return xxx_messageInfo_Integers.Size(m)
}
func (m *Integers) XXX_DiscardUnknown() {
	xxx_messageInfo_Integers.DiscardUnknown(m)
}

var xxx_messageInfo_Integers proto.InternalMessageInfo

func (m *Integers) GetNumberOne() int32 {
	if m != nil {
		return m.NumberOne
	}
	return 0
}

func (m *Integers) GetNumberTwo() int32 {
	if m != nil {
		return m.NumberTwo
	}
	return 0
}

type SumRequest struct {
	Integers             *Integers `protobuf:"bytes,1,opt,name=integers,proto3" json:"integers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{1}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetIntegers() *Integers {
	if m != nil {
		return m.Integers
	}
	return nil
}

type SumResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{2}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type PrimeInteger struct {
	NumberOne            int32    `protobuf:"varint,1,opt,name=number_one,json=numberOne,proto3" json:"number_one,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeInteger) Reset()         { *m = PrimeInteger{} }
func (m *PrimeInteger) String() string { return proto.CompactTextString(m) }
func (*PrimeInteger) ProtoMessage()    {}
func (*PrimeInteger) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{3}
}

func (m *PrimeInteger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeInteger.Unmarshal(m, b)
}
func (m *PrimeInteger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeInteger.Marshal(b, m, deterministic)
}
func (m *PrimeInteger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeInteger.Merge(m, src)
}
func (m *PrimeInteger) XXX_Size() int {
	return xxx_messageInfo_PrimeInteger.Size(m)
}
func (m *PrimeInteger) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeInteger.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeInteger proto.InternalMessageInfo

func (m *PrimeInteger) GetNumberOne() int32 {
	if m != nil {
		return m.NumberOne
	}
	return 0
}

type PrimeManyTimesRequest struct {
	PrimeInteger         *PrimeInteger `protobuf:"bytes,1,opt,name=prime_integer,json=primeInteger,proto3" json:"prime_integer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PrimeManyTimesRequest) Reset()         { *m = PrimeManyTimesRequest{} }
func (m *PrimeManyTimesRequest) String() string { return proto.CompactTextString(m) }
func (*PrimeManyTimesRequest) ProtoMessage()    {}
func (*PrimeManyTimesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{4}
}

func (m *PrimeManyTimesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeManyTimesRequest.Unmarshal(m, b)
}
func (m *PrimeManyTimesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeManyTimesRequest.Marshal(b, m, deterministic)
}
func (m *PrimeManyTimesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeManyTimesRequest.Merge(m, src)
}
func (m *PrimeManyTimesRequest) XXX_Size() int {
	return xxx_messageInfo_PrimeManyTimesRequest.Size(m)
}
func (m *PrimeManyTimesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeManyTimesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeManyTimesRequest proto.InternalMessageInfo

func (m *PrimeManyTimesRequest) GetPrimeInteger() *PrimeInteger {
	if m != nil {
		return m.PrimeInteger
	}
	return nil
}

type PrimeManyTimesResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrimeManyTimesResponse) Reset()         { *m = PrimeManyTimesResponse{} }
func (m *PrimeManyTimesResponse) String() string { return proto.CompactTextString(m) }
func (*PrimeManyTimesResponse) ProtoMessage()    {}
func (*PrimeManyTimesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{5}
}

func (m *PrimeManyTimesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimeManyTimesResponse.Unmarshal(m, b)
}
func (m *PrimeManyTimesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimeManyTimesResponse.Marshal(b, m, deterministic)
}
func (m *PrimeManyTimesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimeManyTimesResponse.Merge(m, src)
}
func (m *PrimeManyTimesResponse) XXX_Size() int {
	return xxx_messageInfo_PrimeManyTimesResponse.Size(m)
}
func (m *PrimeManyTimesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimeManyTimesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PrimeManyTimesResponse proto.InternalMessageInfo

func (m *PrimeManyTimesResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type AverageRequest struct {
	Integers             *Integers `protobuf:"bytes,1,opt,name=integers,proto3" json:"integers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AverageRequest) Reset()         { *m = AverageRequest{} }
func (m *AverageRequest) String() string { return proto.CompactTextString(m) }
func (*AverageRequest) ProtoMessage()    {}
func (*AverageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{6}
}

func (m *AverageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageRequest.Unmarshal(m, b)
}
func (m *AverageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageRequest.Marshal(b, m, deterministic)
}
func (m *AverageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageRequest.Merge(m, src)
}
func (m *AverageRequest) XXX_Size() int {
	return xxx_messageInfo_AverageRequest.Size(m)
}
func (m *AverageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AverageRequest proto.InternalMessageInfo

func (m *AverageRequest) GetIntegers() *Integers {
	if m != nil {
		return m.Integers
	}
	return nil
}

type AverageResponse struct {
	Result               float32  `protobuf:"fixed32,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AverageResponse) Reset()         { *m = AverageResponse{} }
func (m *AverageResponse) String() string { return proto.CompactTextString(m) }
func (*AverageResponse) ProtoMessage()    {}
func (*AverageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{7}
}

func (m *AverageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AverageResponse.Unmarshal(m, b)
}
func (m *AverageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AverageResponse.Marshal(b, m, deterministic)
}
func (m *AverageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AverageResponse.Merge(m, src)
}
func (m *AverageResponse) XXX_Size() int {
	return xxx_messageInfo_AverageResponse.Size(m)
}
func (m *AverageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AverageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AverageResponse proto.InternalMessageInfo

func (m *AverageResponse) GetResult() float32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type FindMaximumRequest struct {
	Integers             *Integers `protobuf:"bytes,1,opt,name=integers,proto3" json:"integers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *FindMaximumRequest) Reset()         { *m = FindMaximumRequest{} }
func (m *FindMaximumRequest) String() string { return proto.CompactTextString(m) }
func (*FindMaximumRequest) ProtoMessage()    {}
func (*FindMaximumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{8}
}

func (m *FindMaximumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMaximumRequest.Unmarshal(m, b)
}
func (m *FindMaximumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMaximumRequest.Marshal(b, m, deterministic)
}
func (m *FindMaximumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMaximumRequest.Merge(m, src)
}
func (m *FindMaximumRequest) XXX_Size() int {
	return xxx_messageInfo_FindMaximumRequest.Size(m)
}
func (m *FindMaximumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMaximumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindMaximumRequest proto.InternalMessageInfo

func (m *FindMaximumRequest) GetIntegers() *Integers {
	if m != nil {
		return m.Integers
	}
	return nil
}

type FindMaximumResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindMaximumResponse) Reset()         { *m = FindMaximumResponse{} }
func (m *FindMaximumResponse) String() string { return proto.CompactTextString(m) }
func (*FindMaximumResponse) ProtoMessage()    {}
func (*FindMaximumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfc74e58bc0fa04b, []int{9}
}

func (m *FindMaximumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindMaximumResponse.Unmarshal(m, b)
}
func (m *FindMaximumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindMaximumResponse.Marshal(b, m, deterministic)
}
func (m *FindMaximumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindMaximumResponse.Merge(m, src)
}
func (m *FindMaximumResponse) XXX_Size() int {
	return xxx_messageInfo_FindMaximumResponse.Size(m)
}
func (m *FindMaximumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindMaximumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindMaximumResponse proto.InternalMessageInfo

func (m *FindMaximumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*Integers)(nil), "calc.Integers")
	proto.RegisterType((*SumRequest)(nil), "calc.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calc.SumResponse")
	proto.RegisterType((*PrimeInteger)(nil), "calc.PrimeInteger")
	proto.RegisterType((*PrimeManyTimesRequest)(nil), "calc.PrimeManyTimesRequest")
	proto.RegisterType((*PrimeManyTimesResponse)(nil), "calc.PrimeManyTimesResponse")
	proto.RegisterType((*AverageRequest)(nil), "calc.AverageRequest")
	proto.RegisterType((*AverageResponse)(nil), "calc.AverageResponse")
	proto.RegisterType((*FindMaximumRequest)(nil), "calc.FindMaximumRequest")
	proto.RegisterType((*FindMaximumResponse)(nil), "calc.FindMaximumResponse")
}

func init() { proto.RegisterFile("calculator/calcpb/calc.proto", fileDescriptor_cfc74e58bc0fa04b) }

var fileDescriptor_cfc74e58bc0fa04b = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xdf, 0x4b, 0x32, 0x41,
	0x14, 0xfd, 0x56, 0xbe, 0x4f, 0xf4, 0xae, 0x9f, 0xd5, 0x94, 0x62, 0x9b, 0x41, 0x2c, 0x04, 0x16,
	0x68, 0x66, 0x0f, 0xf5, 0x10, 0xd1, 0x0f, 0x08, 0x83, 0x44, 0x59, 0x7d, 0xea, 0x45, 0xd6, 0xed,
	0x22, 0x0b, 0xbb, 0x33, 0xdb, 0xec, 0xae, 0xd6, 0xdf, 0xd2, 0x3f, 0x1b, 0xee, 0xce, 0xae, 0xa3,
	0x2d, 0x05, 0x3e, 0xcd, 0xcc, 0x3d, 0x73, 0xcf, 0x39, 0xdc, 0x33, 0x03, 0x75, 0xcb, 0x74, 0xac,
	0xd0, 0x31, 0x03, 0xc6, 0xcf, 0x16, 0x5b, 0x6f, 0x12, 0x2d, 0x2d, 0x8f, 0xb3, 0x80, 0x91, 0xbf,
	0x8b, 0xbd, 0xde, 0x85, 0xc2, 0x13, 0x0d, 0x70, 0x8a, 0xdc, 0x27, 0x87, 0x00, 0x34, 0x74, 0x27,
	0xc8, 0xc7, 0x8c, 0x62, 0x4d, 0x39, 0x52, 0x1a, 0xff, 0x8c, 0x62, 0x5c, 0xe9, 0x53, 0x94, 0xe0,
	0x60, 0xce, 0x6a, 0x39, 0x19, 0x1e, 0xcd, 0x99, 0x7e, 0x05, 0x30, 0x0c, 0x5d, 0x03, 0xdf, 0x42,
	0xf4, 0x03, 0x72, 0x0a, 0x05, 0x5b, 0xf0, 0x46, 0x4c, 0x6a, 0xa7, 0xdc, 0x8a, 0xc4, 0x13, 0x35,
	0x23, 0xc5, 0xf5, 0x63, 0x50, 0xa3, 0x4e, 0xdf, 0x63, 0xd4, 0x47, 0x52, 0x85, 0x3c, 0x47, 0x3f,
	0x74, 0x02, 0x61, 0x41, 0x9c, 0xf4, 0x26, 0x94, 0x06, 0xdc, 0x76, 0x51, 0x30, 0xfc, 0x62, 0x57,
	0x1f, 0x40, 0x25, 0xba, 0xde, 0x33, 0xe9, 0xc7, 0xc8, 0x76, 0xd1, 0x4f, 0xac, 0x5d, 0xc2, 0x7f,
	0x6f, 0x01, 0x8c, 0x85, 0x01, 0xe1, 0x8f, 0xc4, 0xfe, 0x64, 0x09, 0xa3, 0xe4, 0x49, 0x27, 0xbd,
	0x0d, 0xd5, 0x75, 0xc6, 0x4c, 0xcb, 0xc5, 0xd4, 0xf2, 0x35, 0x94, 0xef, 0x66, 0xc8, 0xcd, 0x29,
	0x6e, 0x32, 0x97, 0x13, 0xd8, 0x4a, 0xbb, 0x33, 0x85, 0x72, 0xa9, 0xd0, 0x2d, 0x90, 0x47, 0x9b,
	0xbe, 0xf6, 0xcc, 0x77, 0xdb, 0xdd, 0x2c, 0x84, 0x26, 0xec, 0xae, 0x30, 0xfc, 0x1c, 0x46, 0xe7,
	0x33, 0x07, 0xea, 0x83, 0xe9, 0x58, 0x43, 0xe4, 0x33, 0xdb, 0x42, 0x72, 0x2e, 0xbd, 0xa3, 0xed,
	0x58, 0x64, 0xf9, 0x1a, 0xb4, 0x1d, 0xa9, 0x12, 0x13, 0xeb, 0x7f, 0x48, 0x1f, 0xca, 0xab, 0xe3,
	0x24, 0x07, 0x52, 0x04, 0xeb, 0xb1, 0x69, 0xf5, 0x6c, 0x30, 0xa1, 0x6b, 0x2b, 0xe4, 0x06, 0x54,
	0x31, 0xaf, 0x67, 0x46, 0xa7, 0x64, 0x2f, 0x6e, 0x58, 0x0d, 0x40, 0xab, 0xac, 0x55, 0x93, 0xfe,
	0x86, 0x42, 0xba, 0xa0, 0x4a, 0x23, 0x20, 0xb5, 0xf8, 0xe6, 0xf7, 0xb9, 0x6a, 0xfb, 0x19, 0xc8,
	0x92, 0xa7, 0xad, 0xdc, 0x17, 0x5e, 0xf2, 0xf1, 0x87, 0x9b, 0xe4, 0xa3, 0xcf, 0x76, 0xf1, 0x15,
	0x00, 0x00, 0xff, 0xff, 0x4e, 0x39, 0xa4, 0x97, 0x8c, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalcServiceClient is the client API for CalcService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalcServiceClient interface {
	// Unary call
	Integers(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	// Server streaming
	PrimeManyTimes(ctx context.Context, in *PrimeManyTimesRequest, opts ...grpc.CallOption) (CalcService_PrimeManyTimesClient, error)
	// Client streaming
	AverageLong(ctx context.Context, opts ...grpc.CallOption) (CalcService_AverageLongClient, error)
	// Bi-directional streaming
	FindMaximum(ctx context.Context, opts ...grpc.CallOption) (CalcService_FindMaximumClient, error)
}

type calcServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalcServiceClient(cc *grpc.ClientConn) CalcServiceClient {
	return &calcServiceClient{cc}
}

func (c *calcServiceClient) Integers(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calc.CalcService/Integers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calcServiceClient) PrimeManyTimes(ctx context.Context, in *PrimeManyTimesRequest, opts ...grpc.CallOption) (CalcService_PrimeManyTimesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalcService_serviceDesc.Streams[0], "/calc.CalcService/PrimeManyTimes", opts...)
	if err != nil {
		return nil, err
	}
	x := &calcServicePrimeManyTimesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalcService_PrimeManyTimesClient interface {
	Recv() (*PrimeManyTimesResponse, error)
	grpc.ClientStream
}

type calcServicePrimeManyTimesClient struct {
	grpc.ClientStream
}

func (x *calcServicePrimeManyTimesClient) Recv() (*PrimeManyTimesResponse, error) {
	m := new(PrimeManyTimesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calcServiceClient) AverageLong(ctx context.Context, opts ...grpc.CallOption) (CalcService_AverageLongClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalcService_serviceDesc.Streams[1], "/calc.CalcService/AverageLong", opts...)
	if err != nil {
		return nil, err
	}
	x := &calcServiceAverageLongClient{stream}
	return x, nil
}

type CalcService_AverageLongClient interface {
	Send(*AverageRequest) error
	CloseAndRecv() (*AverageResponse, error)
	grpc.ClientStream
}

type calcServiceAverageLongClient struct {
	grpc.ClientStream
}

func (x *calcServiceAverageLongClient) Send(m *AverageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calcServiceAverageLongClient) CloseAndRecv() (*AverageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AverageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calcServiceClient) FindMaximum(ctx context.Context, opts ...grpc.CallOption) (CalcService_FindMaximumClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalcService_serviceDesc.Streams[2], "/calc.CalcService/FindMaximum", opts...)
	if err != nil {
		return nil, err
	}
	x := &calcServiceFindMaximumClient{stream}
	return x, nil
}

type CalcService_FindMaximumClient interface {
	Send(*FindMaximumRequest) error
	Recv() (*FindMaximumResponse, error)
	grpc.ClientStream
}

type calcServiceFindMaximumClient struct {
	grpc.ClientStream
}

func (x *calcServiceFindMaximumClient) Send(m *FindMaximumRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calcServiceFindMaximumClient) Recv() (*FindMaximumResponse, error) {
	m := new(FindMaximumResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalcServiceServer is the server API for CalcService service.
type CalcServiceServer interface {
	// Unary call
	Integers(context.Context, *SumRequest) (*SumResponse, error)
	// Server streaming
	PrimeManyTimes(*PrimeManyTimesRequest, CalcService_PrimeManyTimesServer) error
	// Client streaming
	AverageLong(CalcService_AverageLongServer) error
	// Bi-directional streaming
	FindMaximum(CalcService_FindMaximumServer) error
}

func RegisterCalcServiceServer(s *grpc.Server, srv CalcServiceServer) {
	s.RegisterService(&_CalcService_serviceDesc, srv)
}

func _CalcService_Integers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalcServiceServer).Integers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calc.CalcService/Integers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalcServiceServer).Integers(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalcService_PrimeManyTimes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PrimeManyTimesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalcServiceServer).PrimeManyTimes(m, &calcServicePrimeManyTimesServer{stream})
}

type CalcService_PrimeManyTimesServer interface {
	Send(*PrimeManyTimesResponse) error
	grpc.ServerStream
}

type calcServicePrimeManyTimesServer struct {
	grpc.ServerStream
}

func (x *calcServicePrimeManyTimesServer) Send(m *PrimeManyTimesResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CalcService_AverageLong_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalcServiceServer).AverageLong(&calcServiceAverageLongServer{stream})
}

type CalcService_AverageLongServer interface {
	SendAndClose(*AverageResponse) error
	Recv() (*AverageRequest, error)
	grpc.ServerStream
}

type calcServiceAverageLongServer struct {
	grpc.ServerStream
}

func (x *calcServiceAverageLongServer) SendAndClose(m *AverageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calcServiceAverageLongServer) Recv() (*AverageRequest, error) {
	m := new(AverageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CalcService_FindMaximum_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalcServiceServer).FindMaximum(&calcServiceFindMaximumServer{stream})
}

type CalcService_FindMaximumServer interface {
	Send(*FindMaximumResponse) error
	Recv() (*FindMaximumRequest, error)
	grpc.ServerStream
}

type calcServiceFindMaximumServer struct {
	grpc.ServerStream
}

func (x *calcServiceFindMaximumServer) Send(m *FindMaximumResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calcServiceFindMaximumServer) Recv() (*FindMaximumRequest, error) {
	m := new(FindMaximumRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CalcService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calc.CalcService",
	HandlerType: (*CalcServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Integers",
			Handler:    _CalcService_Integers_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PrimeManyTimes",
			Handler:       _CalcService_PrimeManyTimes_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "AverageLong",
			Handler:       _CalcService_AverageLong_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "FindMaximum",
			Handler:       _CalcService_FindMaximum_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "calculator/calcpb/calc.proto",
}
